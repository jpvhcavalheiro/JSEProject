<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>What Can Blockchain Projects Learn from Open Source?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MRJlvgH5lZ4/what-can-blockchain-projects-learn-from.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-what_can_blockchain_projects_learn_from_open_source</id><updated>2018-11-16T11:28:48Z</updated><published>2018-11-16T11:28:00Z</published><content type="html">I've been involved with open source over a decade now. I've been part of small projects with innovative ideas which grew into large projects with solid communities. I've also witnessed how dysfunctional communities can suck the energy of projects for years. All that thanks to the open source development and collaboration.&lt;br /&gt;In recent times, I'm active on the blockchain space as well: reading, &lt;a href="https://opensource.com/article/18/8/open-source-tokenomics" target="_blank"&gt;writing&lt;/a&gt;, and contributing to projects. And I came to the conclusion that &lt;b&gt;blockchain projects are startups with open development and open business models&lt;/b&gt;. And to be successful, the first and foremost, blockchain startups have to learn how to build communities the open source way.&lt;br /&gt;&lt;h3&gt;Open source code&lt;/h3&gt;One of the fundamental premises of blockchain is decentralization and giving control and data back to the user. Such decentralization cannot be achieved without transparency and openness. If the source code is closed, that is no different to the centralized closed systems of today. Without making the code open, there is no way to read and confirm that a system is doing what it is promising to do. There are projects that are trying to avoid it, but even they recognize that the code has to be open to a certain level at a minimum. For example, Hedera Hashgraph (which is technically not a blockchain project, but a similar class of software) has said the code cannot be freely distributed (forked), but it will be &lt;a href="https://www.hedera.com/faq#is-the-source-code-open-source"&gt;open for review&lt;/a&gt;.&lt;b&gt; &lt;/b&gt;That proves our premise:&lt;b&gt; blockchain projects, first and foremost are open source projects.&lt;/b&gt; Whether this can be classified as open source according to "The Open Source Initiative" is not in the scope of this article. The point is, if the source code is not readable/verifiable, there is no point in having something run on a non-trusted blockchain platform.&lt;br /&gt;&lt;h3&gt;Open runtime&lt;/h3&gt;In addition to the source being open, what differentiates blockchain from non-blockchain open source projects is that fact that for the first the runtime is open as well. An open source project can be developed in the open, but then run and consumed as an open core, as a service, or as part of a closed system. Public blockchain (not looking into private ones here) are permissionless, anyone can join and leave a network, anyone can run a node or two. It represents a trustless and borderless runtime with open governance.&lt;br /&gt;&lt;h3&gt;Open data&lt;/h3&gt;Another distinct aspect of blockchain is that blockchain projects in addition to the open source code, open runtime, also have open data. Anyone can fork the code (the client application), fork the data&amp;nbsp; (the blockchain history) and start a new network.&lt;b&gt; That ultimately makes blockchain projects the most open software systems ever existed&lt;/b&gt;. Open code, open data, open runtime, open business model, ensure openness in multiple dimensions.&lt;br /&gt;&lt;h3&gt;Open business model&lt;/h3&gt;Blockchain startups are a very unique mix of open source development, and open value capture models, all blended into one at source code level. While a non-blockchain based open source project is typically used for &lt;a href="https://medium.com/open-consensus/5-creating-oss-value-capturing-oss-value-part-ii-8498e6453d0b" target="_blank"&gt;creating value&lt;/a&gt; through collaborative development and open adoption, capturing value happens through a separate business model. The business model can be thought in advance or defined later such as SaaS, open core, subscription, etc. With the blockchain projects, the business model is described in a white paper, and the token model capturing value is implemented in the source code in advance. All that makes &lt;b&gt;blockchain projects a unique blend of value creation and instant capture and distribution&lt;/b&gt;.&lt;br /&gt;&lt;h3&gt;Why be so open?&lt;/h3&gt;Most of the blockchain projects are aiming to become some kind of platform or a hub with open standards and protocols that will attract and be adopted by the developers and consumed by users subsequently. The primary way these platforms and protocols attract developers is not through technical superiority over non-blockchain technology, but by the unique decentralization, characteristics achieved through openness in multiple dimensions. These platforms have to be open in order to become more attractive than the existing closed systems which already have all the developers and users on them. &lt;b&gt;Being open is not only a prerequisite for its transparency, but also for its distribution and adoption. &lt;/b&gt;That is especially valid for projects which are aimed to be consumed as a platform or protocol by developers rather than end users. Open source is the primary way for developers to explore, learn and start using a project.&lt;br /&gt;&lt;h3&gt;Isn't "open" a weakness?&lt;/h3&gt;There was a time when being open source was considered a dangerous act as a competitor could copy and steal the code or the ideas. The recent times proved that being open source is the primary way for developer adoption, especially for developer-centric platforms, tools, and libraries. But as we have seen above, blockchain is also open runtime and open data as well. Which means anybody can fork the code and the data and start a parallel network. That makes a project vulnerable to even more kinds of splits/forks and value grab. And we have seen this happened many times with the forks of the most popular blockchain networks such as Bitcoin and Ethereum. Yet, these projects are performing better than projects which are looking for ways to prevent forking but also lack the ability to attract followers. That is because being open is actually a sign of strength. If a network is so open and has survived forks and attacks, it makes its community only stronger.&lt;br /&gt;We can observe the act of being open not only in projects, but also people and organizations. Today, people and organization rush into sharing and showing off their knowledge through open source code, conference talks, blogging, tweeting, etc. The innovation is happening so fast in certain areas that by the time somebody can understand and copy an idea, the inventor of the idea will have created the next one. And being a copycat in a winner takes all markets has a negative networking effect on community growth.&lt;b&gt; In the journey to conquer the closed and centralized systems, being open is the primary weapon.&lt;/b&gt; &lt;br /&gt;&lt;h3&gt;Hype is different than a community&lt;/h3&gt;I've seen many times, how successful Initial Coin Offering (&lt;a href="https://en.wikipedia.org/wiki/Initial_coin_offering" target="_blank"&gt;ICO&lt;/a&gt;) investors measure hype around a project for an early investment. Typically such a measure works only when the early investment is accompanied by an early exit. In practical terms that means identifying the most hyped ICO, and selling all tokens as soon as it hits an exchange. Measuring such a hype is done by simple statistics around Twitter followers, Facebook followers, Reddit subscribers, Telegram users, etc. These metrics have a little value for measuring a community strength for the following reasons:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Metrics are artificially inflated with fake accounts, paid followers, subscribers, etc;&lt;/li&gt;&lt;li&gt;The ICOs themselves run &lt;a href="https://en.wikipedia.org/wiki/Airdrop_(cryptocurrency)" target="_blank"&gt;airdrops&lt;/a&gt; campaigns and distribute tokens for following, subscribing, joining, etc;&lt;/li&gt;&lt;li&gt;&lt;b&gt;These are the wrong metrics for measuring a developer-centric community;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;What I mean by the latter is that an open source project that is going to be used by developers (as a platform, protocol, whatever) should measure developer activity, rather than airdrop hunter activities. None of the actions mentioned above are building stickiness in a project community. In fact, all of these activities are purposefully skewing the community metrics using temporary incentives.&lt;br /&gt;&lt;h3&gt;Community over market cap&lt;/h3&gt;The Apache Software Foundation (&lt;a href="https://www.apache.org/" target="_blank"&gt;ASF&lt;/a&gt;) is one of the biggest and oldest software foundations, home of hundreds of popular open source projects. And there, we (I'm a member, committer, and PMC there) have a very fundamental belief that says: &lt;b&gt;"&lt;a href="https://blogs.apache.org/foundation/entry/asf_15_community_over_code" target="_blank"&gt;Community over Code&lt;/a&gt;"&lt;/b&gt;. As a software foundation, we are all about code, and wouldn't have a reason for existing without the code, but this slogan actually codifies how we do things, and how we go about decision making. ASF is first a home for communities rather than a repository for code. The code is the by-product of a good and healthy community. And we first try to grow healthy communities united around projects.&lt;br /&gt;&lt;br /&gt;If we look for example how an ASF project measures its quarterly activity and progress, that is by the number of mailing list subscribers, emails sent, issues opened/closed, pull requests created/merged, software releases done, committers and PMCs voted for. The last one is a very important long term indicator for the health of a project measuring the ultimate level of commitment of community members to the success of the projects. If you look at these metrics, these are all about activities performed by technical people rather than temporarily incentivised airdrop hunters. These activities are harder to fake as they require doing something for the project (usually consuming brain power and time) rather than clicking a like/follow button which easier to outsource.&lt;br /&gt;&lt;br /&gt;A blockchain project has a more complex ecosystem than an open source project alone. There are developers, but also miners (or their equivalent for running the network), investors, and eventually users. Measuring only the developer activity won't be indicative enough for the full ecosystem, but focusing on the right metrics would be a good start.&lt;br /&gt;In a similar spirit to the ASF's "Community over Code", I think the cryptocurrencies would benefit from "Community over Market Cap". &lt;b&gt;A healthy community is a far more important long-term measure than a temporary large market cap.&lt;/b&gt; The price of a token/coin and its market cap can be artificially manipulated or temporarily affected by a bear market. A strong and healthy community can &lt;a href="https://en.wikipedia.org/wiki/Hodl" target="_blank"&gt;hodl&lt;/a&gt; and survive ups and downs. An unhealthy community, without any stickiness to the project would fall apart anyway.&lt;br /&gt;&lt;h3&gt;Building communities the blockchain way&lt;/h3&gt;Are there good examples of building stickiness and community around the new blockchain projects? I have seen a few projects that have recognized the importance of the community from the very beginning and approached their token sale completely uniquely. These projects aimed to familiarizing the prospective early investors with the project goals, white paper, mission and not only ask for money. There are definitely more examples, but the projects with unique token sale processes I have seen are the following.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://dfinity.org/"&gt;DFINITY&lt;/a&gt; project had a registration process that cost close to 10$. Then they gave that money back in the form of a swag and a free t-shirt. But it was a good method to get rid of the people who are there only for the noise and not even willing to commit 10 bucks.&lt;/li&gt;&lt;li&gt;&lt;a href="https://quarkchain.io/"&gt;QuarkChain&lt;/a&gt; ICO process had &lt;a href="https://quarkchain.io/docs/quiz-answer.pdf"&gt;quiz&lt;/a&gt; with 25 not very simple questions. In order to join the token sale, one had to be part of their telegram channel from early days + have a good score on the quiz + pass the lottery. While the lottery and telegram channel components were already present in other ICOs at the time, the quiz actually forced candidates to find the answers in a short time, and learn about the project (that led to a blackmarket of quiz answers, but it was a nice attempt the least).&lt;/li&gt;&lt;li&gt;One of the best executions of community building during ICO phase has been of &lt;a href="http://mainframe.com/"&gt;Mainframe&lt;/a&gt;. Mainframe run three &lt;a href="https://blog.mainframe.com/three-million-dollars-53ccc72f3444"&gt;crowdgift&lt;/a&gt; campaigns:&lt;/li&gt;&lt;/ul&gt;&lt;ul style="margin-left: 40px;"&gt;&lt;li&gt;Proof of Being - where tokens where literally physically dropped from the air in certain locations around the world. To get tokens, one had to get to the meetup, meet the team and grab some tokens.&lt;/li&gt;&lt;li&gt;Proof of Freedom - where participants had to answer the question why Mainframe mission mattered to them, and submit the answers in any form: tweet, blog post, audio, video, drawing, etc. I also took part in it by writing a blog &lt;a href="https://medium.com/@bibryam/spreading-freedom-with-mainframe-34a15afecf45"&gt;post&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Proof of Heart - where participants were asked to donate Ether which then went to a few non-profit organizations. &lt;/li&gt;&lt;/ul&gt;&lt;div style="margin-left: 40px;"&gt;We can see how Mainframe used three different methods (each with its pros and cons) to build stickiness, awareness and community around its project and even managed to raise money for non-profit organizations.&lt;br /&gt;&lt;/div&gt;Blockchain projects are especially sensitive to &lt;a href="https://en.wikipedia.org/wiki/Metcalfe%27s_law"&gt;Metcalfe's law&lt;/a&gt; and their value is directly proportional to the size of its community. A token not used by anybody is worth nothing. A platform without developers is a zombi platform. Building a community around the crypto project is as important as building the platform itself, if not more. While the crypto world knows how to raise money, the open source world knows how to build communities. They can learn something from each other.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;i&gt;Follow me on&lt;a class="markup--anchor markup--p-anchor" data-href="http://twitter.com/bibryam" href="http://twitter.com/bibryam" rel="noopener nofollow nofollow noopener" target="_blank"&gt; twitter&lt;/a&gt; for other posts in this space. A shorter version of this post was originally published on &lt;a href="https://opensource.com/article/18/11/what-blockchain-can-learn-open-source" target="_blank"&gt;Opensource.com&lt;/a&gt; under CC BY-SA 4.0. &lt;/i&gt;&lt;/span&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/what-can-blockchain-projects-learn-from-open-source-5177e36e8b11" target="_blank"&gt;Medium&lt;/a&gt;.&lt;/i&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MRJlvgH5lZ4" height="1" width="1" alt=""/&gt;</content><summary>I've been involved with open source over a decade now. I've been part of small projects with innovative ideas which grew into large projects with solid communities. I've also witnessed how dysfunctional communities can suck the energy of projects for years. All that thanks to the open source development and collaboration. In recent times, I'm active on the blockchain space as well: reading, writin...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-11-16T11:28:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/11/what-can-blockchain-projects-learn-from.html</feedburner:origLink></entry><entry><title>Implement your own form renderer for KIE Server</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/S4O878TtTjI/implement-your-own-form-renderer-for.html" /><category term="custom_form_renderer" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><category term="form_renderer" scheme="searchisko:content:tags" /><category term="jbpm_forms" scheme="searchisko:content:tags" /><category term="kie_server_forms" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-implement_your_own_form_renderer_for_kie_server</id><updated>2018-11-16T08:57:53Z</updated><published>2018-11-16T08:57:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;As it was described in &lt;a href="http://mswiderski.blogspot.com/2018/10/lets-embed-forms-rendered-by-kie-server.html"&gt;this article&lt;/a&gt;, KIE Server now provides form renderers for process and task forms built in jBPM Console (aka workbench). Out of the box there are two renderers provided&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;based on PatterFly to provide same look and feel as entire jBPM tooling - it's the default renderer&lt;/li&gt;&lt;li&gt;based on Bootstrap to provide a simple alternative that utilises well established framework for building web and mobile UIs&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;This obviously won't cover all possible needs of users and thus the renderers are actually pluggable. In this article we build a custom one from scratch to illustrate what it takes to have your own.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Create project with dependencies&lt;/h3&gt;&lt;div&gt;First of all, a new maven project needs to be created. It should be most basic project with packaging jar. Then let's add required dependencies to pom.xml&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&amp;gt;&lt;br /&gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;br /&gt; &amp;lt;groupId&amp;gt;org.kie.server.samples&amp;lt;/groupId&amp;gt;&lt;br /&gt; &amp;lt;artifactId&amp;gt;custom-form-renderer&amp;lt;/artifactId&amp;gt;&lt;br /&gt; &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;&lt;br /&gt; &amp;lt;name&amp;gt;Custom Form Renderer&amp;lt;/name&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;properties&amp;gt;&lt;br /&gt; &amp;lt;version.org.kie&amp;gt;7.14.0.Final&amp;lt;/version.org.kie&amp;gt;&lt;br /&gt; &amp;lt;/properties&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;dependencies&amp;gt;&lt;br /&gt; &amp;lt;dependency&amp;gt;&lt;br /&gt; &amp;lt;groupId&amp;gt;org.kie.server&amp;lt;/groupId&amp;gt;&lt;br /&gt; &amp;lt;artifactId&amp;gt;kie-server-services-jbpm-ui&amp;lt;/artifactId&amp;gt;&lt;br /&gt; &amp;lt;version&amp;gt;${version.org.kie}&amp;lt;/version&amp;gt;&lt;br /&gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;br /&gt; &amp;lt;/dependency&amp;gt;&lt;br /&gt; &amp;lt;/dependencies&amp;gt;&lt;br /&gt;&amp;lt;/project&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;pre class="brush:xml"&gt;&lt;/pre&gt;&lt;h3 style="text-align: left;"&gt;Create configuration folders&lt;/h3&gt;Create folders in the project that will configure the renderer - all should be done src/main/resources&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;form-templates-providers&lt;/span&gt; - folder that will contain templates, css and java script files used to render the form&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;META-INF/services/org.kie.server.services.jbpm.ui.form.render.FormRenderer&lt;/span&gt; - an empty file that will be used as discovery mechanism to find and register the renderer - it will be edited a bit later to provide actual implementation details&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="text-align: left;"&gt;Create form renderer implementation&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;In src/main/java create a class (e.g. org.kie.server.samples.CustomFormRenderer) that will extend&amp;nbsp;&lt;span style="font-family: &amp;quot;menlo&amp;quot;; font-size: 12px;"&gt;org.kie.server.services.jbpm.ui.form.render.AbstractFormRenderer&lt;/span&gt;&amp;nbsp;and implement the required methods&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;getName&lt;/b&gt; - provide the name of the template that shall be used as reference when rendering&lt;/li&gt;&lt;li&gt;&lt;b&gt;loadTemplates&lt;/b&gt; - main implementation that loads different types of templates to be used by renderer&lt;/li&gt;&lt;li&gt;default constructor&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;i&gt;IMPORTANT: this new class must be configured as the implementation of the renderer so add its fully qualified class name into&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;i&gt;META-INF/services/org.kie.server.services.jbpm.ui.form.render.FormRenderer&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There are several types of templates that renderer must provide (and load on startup)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;master&lt;/b&gt; - main template that builds the HTML page&lt;/li&gt;&lt;li&gt;&lt;b&gt;header&lt;/b&gt; - header template that creates header of the form&lt;/li&gt;&lt;li&gt;&lt;b&gt;form-group &lt;/b&gt;- form input fields template&lt;/li&gt;&lt;li&gt;&lt;b&gt;case-layout&lt;/b&gt; - layout for case forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;process-layout&lt;/b&gt; - layout for process forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;task-layout&lt;/b&gt; - layout for user task forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; - table to be build for multi subforms&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The easiest way is to base your customisation on top of the out of the box templates (either patternfly or bootstrap). In this example I will use bootstrap templates that can be found &lt;a href="https://github.com/kiegroup/droolsjbpm-integration/tree/master/kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/bootstrap"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Copy all resources from the linked directory into&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;src/main/resources/form-templates-providers/custom&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and then implement the loadTemplates method of the CustomFormRenderer class&lt;/div&gt;&lt;pre class="brush:java"&gt;package org.kie.server.samples;&lt;br /&gt;&lt;br /&gt;import org.kie.server.services.jbpm.ui.form.render.AbstractFormRenderer;&lt;br /&gt;import org.slf4j.Logger;&lt;br /&gt;import org.slf4j.LoggerFactory;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;public class CustomFormRenderer extends AbstractFormRenderer {&lt;br /&gt; &lt;br /&gt; private static final Logger logger = LoggerFactory.getLogger(CustomFormRenderer.class);&lt;br /&gt;&lt;br /&gt; public CustomFormRenderer() {&lt;br /&gt; super(null, null);&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt; public CustomFormRenderer(String serverPath, String resources) {&lt;br /&gt; super(serverPath, resources);&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt; public String getName() {&lt;br /&gt; return "custom";&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; @Override&lt;br /&gt; protected void loadTemplates() {&lt;br /&gt; loadTemplate(MASTER_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/master-template.html"));&lt;br /&gt; loadTemplate(PROCESS_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/process-layout-template.html"));&lt;br /&gt; loadTemplate(TASK_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/task-layout-template.html"));&lt;br /&gt; loadTemplate(FORM_GROUP_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/input-form-group-template.html"));&lt;br /&gt; loadTemplate(HEADER_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/header-template.html"));&lt;br /&gt; loadTemplate(CASE_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/case-layout-template.html"));&lt;br /&gt; loadTemplate(TABLE_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/table-template.html"));&lt;br /&gt; &lt;br /&gt; logger.info("Custom Form renderer templates loaded successfully.");&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Customise your templates&lt;/h3&gt;&lt;div&gt;Since the templates where copied from another renderer we need to customise it, let's start with master template. Open it and replace&amp;nbsp;&lt;i style="color: #3933ff; font-family: Menlo; font-size: 12px;"&gt;${serverPath}/bootstrap&lt;/i&gt;&amp;nbsp;with&amp;nbsp;&lt;i style="color: #3933ff; font-family: Menlo; font-size: 12px;"&gt;${serverPath}/custom&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;This will ensure that our customised files will be loaded.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Make any additional changes to the master template as needed. I will just add custom text next to header.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Master template is the place where you can add additional scripts or stylesheets. There is main js file called &lt;b&gt;kieserver-ui.js&lt;/b&gt; that provide all the logic required to manage and submit forms. It also includes validation, so in case you need extensions to that logic consider to create new file with your changes and replace the location of it to point to your new file.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Make additional customisation to other templates as needed.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Build and deploy renderer to KIE Server&lt;/h3&gt;&lt;div&gt;Implementation is completed so now it's time to build the project and deploy to KIE Server.&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Build the project with maven - mvn clean package&lt;/li&gt;&lt;li&gt;Deploy the project to KIE Server by coping the jar file to kie-server.war/WEB-INF/lib&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Start the server and take advantage of your custom renderer by using following URL that works for one of the sample projects - Evaluation (make sure to deploy it before using the renderer).&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/processes/evaluation/content?renderer=custom&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/tasks/1/content?renderer=custom&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-VzlMram5Aac/W-6DuE7WhTI/AAAAAAAABiQ/PEnvwJm58-kFy0TNQvXEyBQQLPU7feWHACLcBGAs/s1600/Screen%2BShot%2B2018-11-16%2Bat%2B09.44.37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="460" data-original-width="1600" height="182" src="https://3.bp.blogspot.com/-VzlMram5Aac/W-6DuE7WhTI/AAAAAAAABiQ/PEnvwJm58-kFy0TNQvXEyBQQLPU7feWHACLcBGAs/s640/Screen%2BShot%2B2018-11-16%2Bat%2B09.44.37.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;As you can see new renderer is fully operational and customised to your needs.&lt;br /&gt;&lt;br /&gt;That's it, you have now your custom form renderer. The sample described in this article can be found in &lt;a href="https://github.com/mswiderski/custom-form-renderer"&gt;GitHub&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/S4O878TtTjI" height="1" width="1" alt=""/&gt;</content><summary>As it was described in this article, KIE Server now provides form renderers for process and task forms built in jBPM Console (aka workbench). Out of the box there are two renderers provided based on PatterFly to provide same look and feel as entire jBPM tooling - it's the default renderer based on Bootstrap to provide a simple alternative that utilises well established framework for building web a...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-16T08:57:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/implement-your-own-form-renderer-for.html</feedburner:origLink></entry><entry><title>Introducing Application Streams in RHEL 8</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_Z66BB0hDjk/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-introducing_application_streams_in_rhel_8</id><updated>2018-11-15T17:00:50Z</updated><published>2018-11-15T17:00:50Z</published><content type="html">&lt;p&gt;With the &lt;a href="https://developers.redhat.com/rhel8/"&gt;introduction of Red Hat Enterprise Linux 8&lt;/a&gt; (RHEL 8) we have tried to greatly simplify the layout of the content available in Red Hat Enterprise Linux. The main repository, &lt;em&gt;BaseOS&lt;/em&gt;, provides the parts of the distribution that give you a running userspace on physical hardware, a virtual machine, a cloud instance or a container. The &lt;em&gt;Application Stream (AppStream)&lt;/em&gt; repository provides all the applications you might want to run in a given userspace. The &lt;em&gt;Supplemental&lt;/em&gt; repository provides other software that has special licensing. The CodeReady Linux Builder provides mostly build time components for developers (see &lt;a href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/"&gt;Introducing CodeReady Linux Builder&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;As a result, most RHEL 8 systems will only need two repositories enabled. However, this may lead to the the question, where do I find alternate versions of software if there is only 1 application repository? In prior versions, you would look to the RHSCL or Extras repositories. However, in RHEL 8, through a new technology called Modularity, we can offer those alternate versions in the same physical repository.&lt;span id="more-537697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The simplest way to think about it is that we can hide parts of a repository from the package manager. In other words, we create multiple virtual repositories within one physical repository. We call these virtual repositories Application Streams (AppStreams)&lt;/p&gt; &lt;p&gt;So the word &amp;#8220;application&amp;#8221; is obvious, but why &amp;#8220;stream&amp;#8221;? Well, we want to differentiate this tooling from a classic solution to the &amp;#8220;wrong version&amp;#8221; problem, pinning. Pinning is what many users do to retain an existing version of software even after the Distribution has moved on. There are a number of problems with pinning but the simplest is that you don&amp;#8217;t get updates to the software, by design, which, unfortunately, includes security and bug fix updates.  With the Application Streams, as you are locked to the Stream, the stream continues to &amp;#8220;flow&amp;#8221; providing you with backwards compatible updates during its supported life.&lt;/p&gt; &lt;p&gt;You may be thinking to yourself, this sounds a lot like the promise of the Red Hat Software Collections (RHSCL) components and, it is similar. However, with Software Collections (SCLs):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;the application is installed in a non-standard location&lt;/li&gt; &lt;li&gt;the name of the SCL must be unique and indicate what it is leading to complicated names&lt;/li&gt; &lt;li&gt;the collection must be enabled for every process that wishes to use it&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Application Streams on the other hand, install to the normal on disk locations and have distinct metadata to provide information about what is available in the stream.  Application Streams are typically named for the version of the software that is included, e.g. &lt;code&gt;nodejs:8&lt;/code&gt; or  &lt;code&gt;nodejs:10&lt;/code&gt;, but may use other names like &amp;#8220;stable&amp;#8221; and &amp;#8220;latest&amp;#8221; if that makes more sense for that collection of software. The one disadvantage of Application Streams from SCLs is that no two streams can be installed at the same time in to the same userspace.  However, in our experience, this is not a common use case and is better served using containerization or virtualization to provide a second userspace.&lt;/p&gt; &lt;p&gt;Hopefully, this overview of the layout of the RHEL 8 Repositories and introduction to AppStreams is useful in providing a high level understanding of the changes with the new version. However, it is worth noting that you can safely ignore everything about AppStreams if you don&amp;#8217;t need the functionality &amp;#8212; &lt;code&gt;yum install &amp;#60;package&amp;#62;&lt;/code&gt; will just work, even if it is coming from an Application Stream, just as it does in RHEL 7.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#038;title=Introducing%20Application%20Streams%20in%20RHEL%208" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/" data-a2a-title="Introducing Application Streams in RHEL 8"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;Introducing Application Streams in RHEL 8&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_Z66BB0hDjk" height="1" width="1" alt=""/&gt;</content><summary>With the introduction of Red Hat Enterprise Linux 8 (RHEL 8) we have tried to greatly simplify the layout of the content available in Red Hat Enterprise Linux. The main repository, BaseOS, provides the parts of the distribution that give you a running userspace on physical hardware, a virtual machine, a cloud instance or a container. The Application Stream (AppStream) repository provides all the a...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-15T17:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/</feedburner:origLink></entry><entry><title>Red Hat Enterprise Linux 8 Beta is here!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SQ7yeG6Fj8M/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_enterprise_linux_8_beta_is_here</id><updated>2018-11-15T14:06:09Z</updated><published>2018-11-15T14:06:09Z</published><content type="html">&lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 Beta is here!&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And it’s been built with production stability and development agility in mind.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There’s so much to say about RHEL 8 Beta, but I want to focus on just a few points from the corporate &lt;/span&gt;&lt;a href="http://redhat.com/en/blog/powering-its-future-while-preserving-present-introducing-red-hat-enterprise-linux-8-beta"&gt;&lt;span style="font-weight: 400;"&gt;announcement&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; that highlight Red Hat Enterprise Linux 8 Beta as a developer platform that:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Simplifies application development &amp;#8211; with less setup and config effort, you can more quickly get to writing code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Is the easiest RHEL yet for developers that are new to Linux&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Is for traditional and cloud/container applications with many new tools for both&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Already delivers dozens of tools to build and test applications&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Now let’s zoom in on what these mean.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;“Too slow, too fast”&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We’ve gotten this feedback a lot when discussing availability and support of development packages. To address this dichotomy, Red Hat Enterprise Linux 8 Beta has built in the concept of Application Streams to deliver userspace packages (programming languages, compilers, databases, etc.) more simply and with greater flexibility &amp;#8211; this addresses the “too slow”.  For the “too fast” requirement, there are also “Core” components that have the same lifecycle as the operating system &amp;#8211; 10 years. Users will often have a version in each grouping. Application Streams &amp;#8211; think of them as “son of Software Collections” &amp;#8211; are a simpler way to deliver this modularity with improved installation, use, and re-use.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;OS Architecture&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To simplify your development experience, Red Hat Enterprise Linux 8 has been simplified since it is based on two pre-enabled repositories:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;BaseOS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; &amp;#8211; “mostly” OS content&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Application Stream (AppStream) &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&amp;#8211; most developer tools will be here&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Content in &lt;/span&gt;&lt;b&gt;BaseOS&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; is intended to provide the core set of the underlying operating system functionality that provides the foundation for all installations. This content is available in the traditional RPM format. For a list of BaseOS packages, see &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/#Packages-in-BaseOS"&gt;&lt;span style="font-weight: 400;"&gt;Appendix A, &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Packages in BaseOS&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Content in &lt;/span&gt;&lt;b&gt;Application Streams&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; is intended to provide additional functionality beyond what is available in BaseOS. This content set includes additional user space applications, runtime languages, and databases that support the varied workloads and use cases, e.g. “Too Slow”. Content in AppStream is available in one of two formats &amp;#8211; the familiar RPM format and an extension to the RPM format called &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;modules&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; that simply package use/re-use. Components build as &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;modules&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; (e.g PHP) are called &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;streams&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; (e.g PHP 7.2). For a list of AppStream packages, see &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/#Packages-in-Appstream"&gt;&lt;span style="font-weight: 400;"&gt;Appendix B, &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Packages in AppStream&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Linux containers&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Linux containers are a critical component of digital transformation (or cloud-native or however you want to label it), so Red Hat’s lightweight, open standards-based container toolkit is now fully supported and included with Red Hat Enterprise Linux 8. Built with enterprise IT security needs in mind, &lt;/span&gt;&lt;a href="https://www.redhat.com/en/blog/daemon-haunted-container-world-no-longer-introducing-buildah-10"&gt;&lt;b&gt;Buildah&lt;/b&gt;&lt;/a&gt; &lt;span style="font-weight: 400;"&gt;(container building), &lt;/span&gt;&lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;&lt;b&gt;Podman&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (running containers) and &lt;/span&gt;&lt;a href="https://blog.openshift.com/promoting-container-images-between-registries-with-skopeo/"&gt;&lt;b&gt;Skopeo&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (sharing/finding containers) help developers find, run, build and share containerized applications more quickly and efficiently, thanks to the distributed and daemonless nature of the tools. &amp;#8216;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Developer tools&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 includes dozens of tools and we’ve already assembled a number of How-to guides to get you started. Read about them on the &lt;/span&gt;&lt;a href="https://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;developers.redhat.com/rhel8&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. We’ll be added more How-to’s throughout the beta, so visit the &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Download it&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There are 3 ways to access RHEL 8 beta and they based on your existing relationship with Red Hat:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Current Red Hat Developer members can login and download today &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;at &lt;/span&gt;&lt;a href="https://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;If you’re not a Red Hat Developer member, sign-up (it’s free and easy to do) and download RHEL 8 beta. &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;If you’re a current Red Hat Enterprise Linux corporate customer, log into the &lt;/span&gt;&lt;a href="https://access.redhat.com/products/red-hat-enterprise-linux/beta"&gt;&lt;span style="font-weight: 400;"&gt;Customer Portal&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; to participate in the RHEL 8 customer beta.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Resources&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="http://redhat.com/en/blog/powering-its-future-while-preserving-present-introducing-red-hat-enterprise-linux-8-beta"&gt;&lt;span style="font-weight: 400;"&gt;Read&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; about more Red Hat Enterprise Linux 8 Beta announcement regarding new capabilities on:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Networking&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Security&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Systems management&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;File systems and storage&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;References:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="http://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;RHEL 8 Beta info page for application developers&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://wp.me/p8e0as-2fsJ"&gt;&lt;span style="font-weight: 400;"&gt;Python on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="http://developers.redhat.com/rhel8/hw/nodejs"&gt;&lt;span style="font-weight: 400;"&gt;Node.js on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/developing_applications_in_rhel_8/index#installing-and-using-dotnetcore"&gt;&lt;span style="font-weight: 400;"&gt;.NET Core on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 beta documentation pages&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#038;title=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/" data-a2a-title="Red Hat Enterprise Linux 8 Beta is here!"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/"&gt;Red Hat Enterprise Linux 8 Beta is here!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SQ7yeG6Fj8M" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Enterprise Linux 8 Beta is here! And it’s been built with production stability and development agility in mind. There’s so much to say about RHEL 8 Beta, but I want to focus on just a few points from the corporate announcement that highlight Red Hat Enterprise Linux 8 Beta as a developer platform that: Simplifies application development – with less setup and config effort, you can more qui...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2018-11-15T14:06:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/</feedburner:origLink></entry><entry><title>Introducing CodeReady Linux Builder</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ueHDLk2iouY/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Linux Builder" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-introducing_codeready_linux_builder</id><updated>2018-11-15T14:01:33Z</updated><published>2018-11-15T14:01:33Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The RHEL8 Beta introduces a new repository, the CodeReady Linux Builder (or “Builder” for short) that developers may need while developing applications for RHEL. As you all know “developer” is not a one size fits all term. As a result, I am taking this opportunity to try to explain when you might need Builder enabled for your development activities.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;First off, if you are a typical web developer, dealing with PHP, Ruby, or Perl you are unlikely to need the content delivered through Builder. The PHP packages, Ruby gems, and Perl modules provided in the AppStream repository will, in most cases, provide sufficient functionality to develop and run applications you create yourself and to run frameworks like Drupal, WordPress, Rails, or Twiki.  Please see the appropriate &lt;/span&gt;&lt;a href="http://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;HowTos&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; for getting these things up and running.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Ruby and Perl both have additional libraries made available in the Builder repository. However, they are less commonly used or used at build time only. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Next we have Java developers. Again, much of the functionality and jars you would expect to use normally have been provided in the AppStream. For example ant, maven and apache-commons-logging can be found directly in AppStream. However, if you need some of the build-only components, you would find those in the Builder repository. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If you are a .Net developer, you can find the Core Runtime &amp;#38; tools directly in AppStream as the “dotnet” package. When you build applications you will be pulling most of your dependencies from Microsoft or the upstream of those dependencies. As a .Net developer, you will not need the Builder repository. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Moving on to the traditionally compiled languages, the Builder repository is really targeted to you. For languages like C and C++, many of the header files, devel packages, etc. can be found in the Builder repository.  As this sort of developer, you will definitely want to have the Builder repository enabled on your build machines. However, you should not, normally, need the repository enabled on your runtime deployments. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Much like .Net, the LLVM/Clang, Go &amp;#38; Rust language compilers are provided directly in AppStream with a few tools to support development. If you use one of these languages, you won’t need the Builder repository.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Last but not least, when you want to package and deploy your applications, you can find many of the tools that support you in this process in the Builder repository as well. For example, meson, dejagnu, and doxygen are available for use. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Hopefully, you found this description of the new Code Ready Linux Builder helpful and we really hope the changes to the content repositories with RHEL8 make things simpler and easier to find.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;https://wp.me/p8e0as-2fmr&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#038;title=Introducing%20CodeReady%20Linux%20Builder" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/" data-a2a-title="Introducing CodeReady Linux Builder"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/"&gt;Introducing CodeReady Linux Builder&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ueHDLk2iouY" height="1" width="1" alt=""/&gt;</content><summary>The RHEL8 Beta introduces a new repository, the CodeReady Linux Builder (or “Builder” for short) that developers may need while developing applications for RHEL. As you all know “developer” is not a one size fits all term. As a result, I am taking this opportunity to try to explain when you might need Builder enabled for your development activities. First off, if you are a typical web developer, d...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-15T14:01:33Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/</feedburner:origLink></entry><entry><title>Hotrod clients C++ and C# 8.3.0.Final are out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LidwW8xKmRM/hotrod-clients-c-and-c-830final-are-out.html" /><category term="C#" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="final" scheme="searchisko:content:tags" /><category term="minor release" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>rigazilla</name></author><id>searchisko:content:id:jbossorg_blog-hotrod_clients_c_and_c_8_3_0_final_are_out</id><updated>2018-11-15T09:18:53Z</updated><published>2018-11-15T09:18:00Z</published><content type="html">Dear Infinispanners,&lt;br /&gt;&lt;br /&gt;The C++ and C# 8.3.0.Final releases are out!&lt;br /&gt;&lt;br /&gt;Main features contained in this release are:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Cache Admin Operations: create and remove cache at runtime;&lt;/li&gt;&lt;li&gt;Counters: clusterwide counters;&lt;/li&gt;&lt;li&gt;Transactions: run a list of operations transactionally;&lt;/li&gt;&lt;li&gt;Media Types: use differents media-types to encode (key,value) pairs.&lt;/li&gt;&lt;/ul&gt;Source code, binaries and docs are available as usual at the links below.&lt;br /&gt;&lt;br /&gt;Thank you for reading,&lt;br /&gt;The Infinispan Team &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;[1]&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314125&amp;amp;version=12339951"&gt; Release notes for the 8.3.0 serie&lt;/a&gt;&lt;br /&gt;[2++] &lt;a href="https://github.com/infinispan/cpp-client/tree/8.3.0.Final"&gt;C++ code for 8.3.0.Final&lt;/a&gt;&lt;br /&gt;[2#] &lt;a href="https://github.com/infinispan/dotnet-client/tree/8.3.0.Final"&gt;C# code for 8.3.0.Final&lt;/a&gt;&lt;br /&gt;[3] &lt;a href="http://infinispan.org/hotrod-clients/"&gt;Downloads&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/tlApD8iIgu8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LidwW8xKmRM" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispanners, The C++ and C# 8.3.0.Final releases are out! Main features contained in this release are: Cache Admin Operations: create and remove cache at runtime; Counters: clusterwide counters; Transactions: run a list of operations transactionally; Media Types: use differents media-types to encode (key,value) pairs.Source code, binaries and docs are available as usual at the links below....</summary><dc:creator>rigazilla</dc:creator><dc:date>2018-11-15T09:18:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/tlApD8iIgu8/hotrod-clients-c-and-c-830final-are-out.html</feedburner:origLink></entry><entry><title>Keycloak 4.6.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Dw-MKwgruiQ/keycloak-460final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_6_0_final_released</id><updated>2018-11-15T07:55:17Z</updated><published>2018-11-15T07:55:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.6.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Dw-MKwgruiQ" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-11-15T07:55:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/11/keycloak-460final-released.html</feedburner:origLink></entry><entry><title>Integration Key to Customer Experience - Common Architectural Elements</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0Qy87Y_QT7k/integration-key-to-customer-experience-architectural-elements.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_key_to_customer_experience_common_architectural_elements</id><updated>2018-11-15T06:00:02Z</updated><published>2018-11-15T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPs/k79t2e19XRAeKWz9QpGmOqiZOCg9F-LzwCLcBGAs/s1600/omnichannel-header.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="454" data-original-width="895" height="162" src="https://4.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPs/k79t2e19XRAeKWz9QpGmOqiZOCg9F-LzwCLcBGAs/s320/omnichannel-header.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 2 - Common architectural elements.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;In &lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;my previous article from this series&lt;/a&gt; we introduced a use case around integration being the key to transforming your customer experience.&lt;br /&gt;&lt;br /&gt;The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you'll be led through the blueprint details.&lt;br /&gt;&lt;br /&gt;This article starts the real journey at the very top, with a generic architecture from which we'll discuss the common architectural elements one by one.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;From specific to generic&lt;/h3&gt;&lt;div&gt;Before diving in to the common elements, it might be nice to understand that this is not a catch all for every possible integration solution. It's a collection of identified elements that I've uncovered in multiple, from two to three, customer implementations. These elements presented here are then the &lt;i&gt;generic common architectural elements&lt;/i&gt;&amp;nbsp;that I've identified and collected in to the generic architectural blueprint.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It's my intent to provide a blueprint that provides guidance and not deep technical details. You're smart enough to figure out wiring integration points in your own architectures. You're capable of slotting in the technologies and components you've committed to in the past where applicable. It's my job here to describe the architectural blueprint generic components and outline a few specific cases with visual diagrams so that you're able to make the right decisions from the start of your integration projects.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Another challenge has been how to visually represent the architectural blueprint. There are many ways to represent each element, but I've chosen some icons, text and colours that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now let's take a quick tour of the generic architecture and outline the common elements uncovered in my research.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;External applications&lt;/h3&gt;&lt;div&gt;Starting at the top of the diagram, which is by no means a geographical necessity, there are two elements that represent external applications that interact with the architecture. Distilling the various applications discovered in customer solution research, I've come up with two common representations.&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="107" data-original-width="996" height="34" src="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Common architectural elements for external&lt;br /&gt;application deployments.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;The first is &lt;i&gt;mobile applications, &lt;/i&gt;covering basically everything that customers use to interact directly with a company. This can be mobile applications deployed by the company themselves or developed by third party organizations to interact with the services offered.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;The second is &lt;i&gt;web applications,&lt;/i&gt;&amp;nbsp;a broad element to contain all other types of applications, web sites and/or services that are deployed by the company or any third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;API gateway &amp;amp; proxy&lt;/h3&gt;&lt;div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="165" data-original-width="992" height="53" src="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Common architectural elements are API's and proxies.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;These elements in the common architecture are found in every customer solution researched. They were mentioned by name and consisted of an &lt;i&gt;Application Programming Interface (API) gateway&lt;/i&gt; that managed access from external applications when calling internal customer solution services.&lt;br /&gt;&lt;br /&gt;The proxy shown was a &lt;i&gt;reverse proxy&lt;/i&gt;, a standard solution for providing a security layer between external applications calling internal services by hiding the internal addresses.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Container platform&lt;/h3&gt;&lt;div&gt;Without a doubt, every organization engaged in omnichannel integrations to improve customer experience has seen the value of containers and use of a container platform. The container platform provides for one consistent environment for developers and operations to manage services, applications, integration points, process integration, and security.&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="287" data-original-width="988" height="92" src="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Common architectural element is a container platform.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;It's also the one way to ensure you can uniformly leverage the same container infrastructure across a hybrid multicloud environment. It avoids becoming locked into any private or cloud infrastructure as you have an exit strategy with a container platform that's consistent across your architecture.&lt;br /&gt;&lt;br /&gt;The security aspect is interwoven in the container platform, as each container service, application, or process integration can be plugged in to an organizations authentication and authorization mechanisms.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Storage services&lt;/h3&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="337" data-original-width="990" height="108" src="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Common architectural elements in storage services.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;The storage services uncovered in customer solution research were diverse and numerous. For that reason there is no single common architectural element shown at the highest level. Everything from container native storage to traditional block storage was found.&lt;br /&gt;&lt;br /&gt;In later articles, when more detail is shown, I'll make a point to present a few of the options chosen by customers integrating data services with processes and applications.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div&gt;This was just a short overview of the common generic elements that make up our architecture blueprint for ominchannel customer experience use case.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;Generic common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Details of specific elements (external apps, api gateways, container platform storage services)&lt;/li&gt;&lt;li&gt;Application integration details&lt;/li&gt;&lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at the details of&amp;nbsp;specific elements in an architecture for omnichannel customer experience.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VckLm7vsLo8:3wGcWYD6r_w:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VckLm7vsLo8:3wGcWYD6r_w:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VckLm7vsLo8:3wGcWYD6r_w:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VckLm7vsLo8:3wGcWYD6r_w:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VckLm7vsLo8:3wGcWYD6r_w:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/VckLm7vsLo8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0Qy87Y_QT7k" height="1" width="1" alt=""/&gt;</content><summary>Part 2 - Common architectural elements.In my previous article from this series we introduced a use case around integration being the key to transforming your customer experience. The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the orde...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-15T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/VckLm7vsLo8/integration-key-to-customer-experience-architectural-elements.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.4.0.CR1 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wVnEQv4_i-I/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_4_0_cr1_released</id><updated>2018-11-15T15:12:12Z</updated><published>2018-11-15T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Today, we release the first candidate release of Hibernate ORM 5.4.0.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;5.4 is the direct continuation of 5.3 and you should plan for an upgrade to continue getting fresh fixes as soon as the Final is released.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please consider testing this candidate release so the upgrade can be as smooth as possible.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="entitygraph-improvements"&gt;&lt;a class="anchor" href="#entitygraph-improvements"&gt;&lt;/a&gt;EntityGraph improvements&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JPA’s EntityGraph feature is cumbersome to define and use. Hibernate ORM 5.4 adds 2 new features to help make working with EntityGraphs easier.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that all these improvements are considered incubating.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="entitygraph-parsing"&gt;&lt;a class="anchor" href="#entitygraph-parsing"&gt;&lt;/a&gt;EntityGraph parsing&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The first feature is the ability to create a graph from a String representation. E.g., given a Person entity, we might want to make sure the Person’s spouse is eagerly fetched:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; EntityGraph eg = org.hibernate.graph.EntityGraphs.parse( Person.class, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;spouse&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, entityManager ); &lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; Person personAndSpouse = entityManager.find( Person.class, &lt;span style="color:#00D"&gt;1&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Collections&lt;/span&gt;.singletonMap( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;javax.persistence.fetchgraph&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, eg );&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This parsing supports all of the features of EntityGraph creation including sub-graphs (though see second feature) and sub-class graphs. See &lt;a href="http://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#fetching-strategies-dynamic-fetching-entity-graph"&gt;the documentation&lt;/a&gt; for in-depth discussion and examples.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="entitygraph-manipulation"&gt;&lt;a class="anchor" href="#entitygraph-manipulation"&gt;&lt;/a&gt;EntityGraph manipulation&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is mainly about combining graphs. E.g.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; EntityGraph eg1 = org.hibernate.graph.EntityGraphs.parse( Person.class, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;spouse&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, entityManager ); &lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; EntityGraph eg2 = org.hibernate.graph.EntityGraphs.parse( Person.class, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;spouse(age, dob)&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, entityManager ); &lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; EntityGraph combinedGraph = org.hibernate.graph.EntityGraphs.merge( entityManager, Person.class, eg1, eg2 ) &lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; Person personAndSpouse = entityManager.find( Person.class, &lt;span style="color:#00D"&gt;1&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Collections&lt;/span&gt;.singletonMap( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;javax.persistence.fetchgraph&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, combinedGraph );&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is a very trivial example meant just for illustration. It can actually be much more easily defined as:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; EntityGraph combinedGraph = org.hibernate.graph.EntityGraphs.parse( Person.class, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;spouse( age, dob )&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, entityManager ); &lt;span style="color:#088;font-weight:bold"&gt;final&lt;/span&gt; Person personAndSpouse = entityManager.find( Person.class, &lt;span style="color:#00D"&gt;1&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Collections&lt;/span&gt;.singletonMap( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;javax.persistence.fetchgraph&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, combinedGraph );&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="jdk-11-support"&gt;&lt;a class="anchor" href="#jdk-11-support"&gt;&lt;/a&gt;JDK 11 support&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;5.4.0 will support JDK 11 out of the box e.g. no need for additional dependencies or environment variable as &lt;a href="http://in.relation.to/2018/09/13/using-hibernate-orm-with-jdk11/"&gt;required with 5.3&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes-and-minor-improvements"&gt;&lt;a class="anchor" href="#bug-fixes-and-minor-improvements"&gt;&lt;/a&gt;Bug fixes and minor improvements&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release contains a lot of bugfixes and minor improvements.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31691/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31691&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-4-0-cr1"&gt;&lt;a class="anchor" href="#getting-5-4-0-cr1"&gt;&lt;/a&gt;Getting 5.4.0.CR1&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.4/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-next"&gt;&lt;a class="anchor" href="#what-s-next"&gt;&lt;/a&gt;What’s next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will release 5.4.0.Final in the coming weeks and will release regular maintenance releases thereafter.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;&lt;strong&gt;hibernate&lt;/strong&gt; tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wVnEQv4_i-I" height="1" width="1" alt=""/&gt;</content><summary>Today, we release the first candidate release of Hibernate ORM 5.4.0. 5.4 is the direct continuation of 5.3 and you should plan for an upgrade to continue getting fresh fixes as soon as the Final is released. Please consider testing this candidate release so the upgrade can be as smooth as possible. What’s new EntityGraph improvements JPA’s EntityGraph feature is cumbersome to define and use. Hibe...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-11-15T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/15/hibernate-orm-540-cr1-out/</feedburner:origLink></entry><entry><title>Python in RHEL 8</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pEmvVSlUhhE/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Petr Viktorin</name></author><id>searchisko:content:id:jbossorg_blog-python_in_rhel_8</id><updated>2018-11-14T14:01:05Z</updated><published>2018-11-14T14:01:05Z</published><content type="html">&lt;p&gt;Ten years ago, the developers of the Python programming language decided to clean things up and release a backwards-incompatible version, Python 3. They initially underestimated the impact of the changes, and the popularity of the language. Still, in the last decade, the vast majority of community projects has migrated to the new version, and major projects are now dropping support for Python 2.&lt;/p&gt; &lt;p&gt;In Red Hat Enterprise Linux 8, Python 3.6 is the default. But Python 2 is remains available in RHEL 8.&lt;/p&gt; &lt;h1&gt;Using Python in RHEL 8&lt;/h1&gt; &lt;p&gt;To install Python, type &lt;code&gt;yum install python3&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To run Python, type &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If that doesn&amp;#8217;t work for you, or you need more details, read on!&lt;span id="more-536097"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Python 3&lt;/h2&gt; &lt;p&gt;In RHEL 8, Python 3.6 is the default, fully supported version of Python. It is not always installed, however. Similarly to any other available tool, use &lt;code&gt;yum install python3&lt;/code&gt; to get it.&lt;/p&gt; &lt;p&gt;Add-on package names generally have the &lt;code&gt;python3&lt;/code&gt; prefix. Use &lt;code&gt;yum install python3-requests&lt;/code&gt; to install the popular library for making HTTP connections.&lt;/p&gt; &lt;h2&gt;Python 2&lt;/h2&gt; &lt;p&gt;Not all existing software is ready to run on Python 3. And that’s OK! RHEL 8 Beta still contains the Python 2 stack, which can be installed in parallel with Python 3. Get it using &lt;code&gt;yum install python2&lt;/code&gt;, and run with &lt;code&gt;python2&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Why not just “Python”?&lt;/h2&gt; &lt;p&gt;Okay, okay, so there&amp;#8217;s &lt;code&gt;python3&lt;/code&gt; and &lt;code&gt;python2&lt;/code&gt;. But what if I use just &lt;code&gt;python&lt;/code&gt;? Well…&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ python -bash: python: command not found &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is no &lt;code&gt;python&lt;/code&gt; command by default.&lt;/p&gt; &lt;p&gt;Why? Frankly, we couldn’t agree what &lt;code&gt;python&lt;/code&gt; should do. There are two groups of developers. One expects &lt;code&gt;python&lt;/code&gt; to mean Python 2, and the other Python 3. The two don&amp;#8217;t always talk to each other, so you might be a member of one camp and not know anyone from the other – but they do exist.&lt;/p&gt; &lt;p&gt;Today, in 2018, the &lt;code&gt;python == python2&lt;/code&gt; side is more popular, even among those that prefer Python 3 (which they spell out as &lt;code&gt;python3&lt;/code&gt;). This side is also backed by an official upstream recommendation, PEP 394. However, we expect that this viewpoint will become much less popular over the lifespan of RHEL 8. By making &lt;code&gt;python&lt;/code&gt; always mean Python 2, Red Hat would be painting itself into a corner.&lt;/p&gt; &lt;h3&gt;Unversioned Python command&lt;/h3&gt; &lt;p&gt;That said, there are applications that expect a &lt;code&gt;python&lt;/code&gt; command to exist and that assumption might be hard to change. That’s why you can use the &lt;em&gt;alternatives&lt;/em&gt; mechanism to enable the unversioned &lt;code&gt;python&lt;/code&gt; command system-wide, and set it to a specific version:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;alternatives --set python /usr/bin/python3&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For Python 2, use &lt;code&gt;/usr/bin/python2&lt;/code&gt; instead. For details on how to revert the changes or do the setup interactively, see &lt;code&gt;man unversioned-python&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Note, We do &lt;strong&gt;not&lt;/strong&gt; recommend this approach. We recommend you explicitly refer to &lt;code&gt;python3&lt;/code&gt; or &lt;code&gt;python2&lt;/code&gt;. That way, your scripts and commands will work on any machine that has the right version of Python installed.&lt;/p&gt; &lt;p&gt;Note that this works only for the &lt;code&gt;python&lt;/code&gt; command itself. Packages and other commands don&amp;#8217;t have configurable unversioned variants. Even if you configure &lt;code&gt;python&lt;/code&gt;, the commands &lt;code&gt;yum install python-requests&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt; won&amp;#8217;t work.&lt;/p&gt; &lt;p&gt;Always use the explicit version in these cases. Better yet, don&amp;#8217;t rely on the wrapper scripts for &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;venv&lt;/code&gt; and other Python modules that you call from the command line.  Instead use &lt;code&gt;python3 -m pip&lt;/code&gt;, &lt;code&gt;python3 -m venv&lt;/code&gt;, &lt;code&gt;python2 -m virtualenv&lt;/code&gt;.&lt;/p&gt; &lt;h1&gt;Third-party packages&lt;/h1&gt; &lt;p&gt;Not all Python software is shipped with RHEL 8 – there&amp;#8217;s only so much that Red Hat can verify, package and support.&lt;/p&gt; &lt;p&gt;To install a third-party package, many sources on the Internet will suggest using &lt;code&gt;sudo pip install&lt;/code&gt;. &lt;strong&gt;Do not do this!&lt;/strong&gt; This command translates to “download a package from the internet, and run it on my machine as root to install it”.&lt;/p&gt; &lt;p&gt;Even if the package is trustworthy, &lt;strong&gt;this is a bad idea&lt;/strong&gt;. A large part of RHEL 8 relies on Python 3.6. If you throw in another package, there&amp;#8217;s no guarantee that it will co-exist peacefully with the rest of the system. There are some protections in place, but you should generally assume that &lt;code&gt;sudo pip&lt;/code&gt; will &lt;em&gt;break your system&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;(Not to mention it won’t work as-is: the command name is &lt;code&gt;pip3&lt;/code&gt; or &lt;code&gt;pip2&lt;/code&gt;.)&lt;/p&gt; &lt;p&gt;If you want to use third-party packages, create a &lt;em&gt;virtual environment&lt;/em&gt; using &lt;code&gt;python3 -m venv --system-site-packages myenv&lt;/code&gt; (or for Python 2, install &lt;code&gt;python2-virtualenv&lt;/code&gt; and run &lt;code&gt;python2 -m virtualenv --system-site-packages myenv&lt;/code&gt;). Then, activate the environment using &lt;code&gt;source myenv/bin/activate&lt;/code&gt;, and install packages into it using &lt;code&gt;pip install&lt;/code&gt;. The packages will then be available as long as the environment is activated. While this does not protect you against malicious packages, it does protect the system from unexpected breakage.&lt;/p&gt; &lt;p&gt;When a virtual environment is active, unversioned commands like &lt;code&gt;python&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; will refer to the Python version that created the virtual environment. So, to install the Requests package, run  &lt;code&gt;pip install requests&lt;/code&gt; (or if you prefer being explicit, &lt;code&gt;python -m pip install requests&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The &lt;code&gt;--system-site-packages&lt;/code&gt; switch makes the environment re-use libraries installed system-wide. Leave it out to get an isolated environment, where all libraries outside Python&amp;#8217;s standard library need to be installed explicitly.&lt;/p&gt; &lt;p&gt;Another possibility is installing user-specific packages with pip’s &lt;code&gt;--user&lt;/code&gt; switch. The command &lt;code&gt;python3 -m pip install --user pyflakes&lt;/code&gt; will make the &lt;code&gt;flake8&lt;/code&gt; linter available to you personally, leaving system tools like &lt;code&gt;yum&lt;/code&gt; unaffected.&lt;/p&gt; &lt;p&gt;If you truly need something installed system-wide, build a RPM package and use &lt;code&gt;yum install&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Obligatory note: Third-party packages installed with &lt;code&gt;pip&lt;/code&gt; are not reviewed or supported by Red Hat.&lt;/p&gt; &lt;h1&gt;Platform-Python: The Python behind the curtain&lt;/h1&gt; &lt;p&gt;Careful readers might have noticed a discrepancy here: Python is not installed by default, but &lt;code&gt;yum&lt;/code&gt; is, and &lt;code&gt;yum&lt;/code&gt; is written in Python. What magic makes that possible?&lt;/p&gt; &lt;p&gt;It turns out there is an internal Python interpreter called “Platform-Python”. This is what system tools use. It only includes the parts of Python needed for the system to function, and there are no guarantees that any particular feature won&amp;#8217;t be removed from it in the future.&lt;/p&gt; &lt;p&gt;However, libraries for Platform-Python &lt;em&gt;are shared with the “user-visible” Python 3.6&lt;/em&gt;. This conserves disk space, and it also means that, for example, &lt;code&gt;yum&lt;/code&gt; extensions built for Python 3.6 will work for the system tool.&lt;/p&gt; &lt;p&gt;If you are not re-building the distro, do not use Platform-Python directly. Install &lt;code&gt;python3&lt;/code&gt; and use that. But remember, do not install&lt;/p&gt; &lt;h1&gt;Porting to Python 3&lt;/h1&gt; &lt;p&gt;It won’t be in RHEL 8 Beta, but there will come a day when support for Python 2 will end. If you maintain Python 2 code, you should think about porting it to Python 3.&lt;/p&gt; &lt;p&gt;Python 3 was first released in 2008. For over a decade, it has been improving in features, performance and – ironically – compatibility with Python 2. You might have heard horror stories and urban legends about porting code to Python 3.0 or 3.2 that would be much less scary nowadays.&lt;/p&gt; &lt;p&gt;I’m not saying porting is trivial now, but it’s definitely gotten easier. As with any other change to a system, porting to Python 3 mainly requires knowledge of your codebase, good tests – and some time.&lt;/p&gt; &lt;p&gt;What’s the reward? Python 3 is a better language – after all, it&amp;#8217;s the language Python 2 developers choose to use! For enterprise applications, the main feature is reduced risk of hard-to-debug, input-dependent bugs when handling non-ASCII text such as people’s names (or emoji).&lt;/p&gt; &lt;p&gt;There are many community resources that document and help with porting to Python 3.&lt;/p&gt; &lt;p&gt;If you are reading this blog, you are probably working on a large, conservative code base. We ported a few of those, and distilled our experience in the the &lt;a href="https://portingguide.readthedocs.io/"&gt;Conservative Porting Guide&lt;/a&gt;, a hands-on walkthrough that focuses on compatibility and keeping working code throughout the porting process. Give it a try, and if you find that something is not covered, let us know – or even send a pull request to it!&lt;/p&gt; &lt;p&gt;If you maintain Python C extensions, a similarly focused guide is part of the &lt;a href="https://py3c.readthedocs.io/"&gt;py3c project&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Takeaways&lt;/h1&gt; &lt;p&gt;To install or run Python on RHEL 8, use &lt;code&gt;python3&lt;/code&gt; – unless you have a different version in mind.&lt;/p&gt; &lt;p&gt;Do not use &lt;code&gt;sudo pip&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Do not use platform-python for your applications. However, use platform-python if you are writing system/admin code for RHEL 8.&lt;/p&gt; &lt;p&gt;And if you have some code for Python 2, now is a great time to start modernizing it.&lt;/p&gt; &lt;p&gt;Enjoy Python in RHEL 8!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#38;linkname=Python%20in%20RHEL%208" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F14%2Fpython-in-rhel-8%2F&amp;#038;title=Python%20in%20RHEL%208" data-a2a-url="https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/" data-a2a-title="Python in RHEL 8"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/"&gt;Python in RHEL 8&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pEmvVSlUhhE" height="1" width="1" alt=""/&gt;</content><summary>Ten years ago, the developers of the Python programming language decided to clean things up and release a backwards-incompatible version, Python 3. They initially underestimated the impact of the changes, and the popularity of the language. Still, in the last decade, the vast majority of community projects has migrated to the new version, and major projects are now dropping support for Python 2. I...</summary><dc:creator>Petr Viktorin</dc:creator><dc:date>2018-11-14T14:01:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/</feedburner:origLink></entry></feed>
